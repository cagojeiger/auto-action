name: Push Helm Charts (OCI)

on:
  push:
    branches: [ main ]              # 기본 브랜치
    paths:                          # helm-charts 아래 어떤 파일이 바뀌어도 실행
      - 'helm-charts/**'
  workflow_dispatch:

jobs:
  detect-charts:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect changed chart dirs
        id: set
        run: |
          # 직전 커밋과 비교하여 변경된 helm-charts/*/* 경로 추출
          changed=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                   | grep '^helm-charts/' \
                   | awk -F/ '{print $2}' | sort -u)
          # 공백이면 아무 일도 하지 않도록 빈 JSON 배열 반환
          if [ -z "$changed" ]; then
            echo 'matrix=[]' >> $GITHUB_OUTPUT
          else
            # 예: ["base-template","code-server"]
            json=$(printf '%s\n' $changed | jq -R -s -c 'split("\n")[:-1]')
            echo "matrix=$json" >> $GITHUB_OUTPUT
          fi

  push-charts:
    needs: detect-charts
    if: ${{ needs.detect-charts.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ${{ fromJson(needs.detect-charts.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract chart info
        id: info
        run: |
          DIR="helm-charts/${{ matrix.chart }}"
          CHART_VERSION=$(helm show chart "$DIR" | awk '/^version:/ {print $2}')
          CHART_NAME=$(helm show chart "$DIR" | awk '/^name:/ {print $2}')
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
          echo "CHART_NAME=$CHART_NAME"       >> $GITHUB_ENV
          echo "::notice title=Chart Info::name=$CHART_NAME version=$CHART_VERSION"

      - name: Package
        run: |
          helm package "helm-charts/${{ matrix.chart }}" --version ${{ env.CHART_VERSION }}

      - name: Push (OCI)
        run: |
          helm push "${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz" \
            oci://docker.io/${{ secrets.DOCKERHUB_USERNAME }}
          echo "::notice title=Done::${{ env.CHART_NAME }} pushed"