name: Push Helm Chart to Docker Hub

on:
  push:
    paths:
      - 'helm-charts/code-server/**'
    branches:
      - main # 또는 기본 브랜치 이름
  workflow_dispatch:

jobs:
  push-to-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # workflow_run 이벤트는 기본적으로 main 브랜치를 체크아웃
          ref: main

      - name: Set up Helm
        uses: azure/setup-helm@v4
        # 최신 버전의 Helm 사용 (OCI 푸시 지원)

      - name: Extract Helm chart version and name
        id: extract_info
        run: |
          CHART_VERSION=$(helm show chart helm-charts/code-server | grep '^version:' | awk '{print $2}')
          CHART_NAME=$(helm show chart helm-charts/code-server | grep '^name:' | awk '{print $2}')
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV
          echo "CHART_NAME=${CHART_NAME}" >> $GITHUB_ENV
          echo "추출된 차트 버전: ${CHART_VERSION}"
          echo "추출된 차트 이름: ${CHART_NAME}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Package Helm chart
        run: |
          helm package helm-charts/code-server --version ${{ env.CHART_VERSION }}

      - name: Push Helm chart to Docker Hub (OCI)
        run: |
          OCI_REPO_PATH="oci://docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.CHART_NAME }}-original"
          TGZ_FILE="${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz"

          # Push with version tag
          helm push "${TGZ_FILE}" "${OCI_REPO_PATH}:${{ env.CHART_VERSION }}"
          echo "Helm 차트 푸시 완료 (버전): ${OCI_REPO_PATH}:${{ env.CHART_VERSION }}"

          # Push with latest tag
          helm push "${TGZ_FILE}" "${OCI_REPO_PATH}:latest"
          echo "Helm 차트 푸시 완료 (latest): ${OCI_REPO_PATH}:latest"