########################################################
# Global
########################################################
global:
  imageRegistry: {{ .vars.globalImageRegistry }}
  imagePullSecrets: {{ .vars.globalImagePullSecrets }}
  defaultStorageClass: {{ .vars.globalDefaultStorageClass }}
  storageClass: {{ .vars.globalStorageClass }}

########################################################
# Redis
########################################################
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 1024Mi
    persistence:
      enabled: false

########################################################
# PostgreSQL
########################################################
postgresql:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    username: {{ .vars.adminUser }}
    password: {{ .vars.adminPassword }}
  resources:
    requests:
      memory: 128Mi
    limits:
      memory: 1024Mi
  primary:
    initdb:
      scripts:
        create-databases.sql: |
          CREATE DATABASE gitea;
          CREATE DATABASE harbor_core;

########################################################
# Minio
########################################################
minio:
  enabled: true
  nameOverride: minio
  mode: distributed
  auth:
    rootUser: {{ .vars.adminUser }}
    rootPassword: {{ .vars.adminPassword }}
  provisioning:
    enabled: true
    sleepTime: 30s
    buckets:
      - name: default
      - name: harbor
  resources:
    requests:
      memory: 128Mi
    limits:
      memory: 2048Mi
  ingress:
    enabled: true
    ingressClassName: {{ .vars.nginxIngressClassName }}
    hostname: minio.{{ .vars.domain }}
  apiIngress:
    enabled: true
    ingressClassName: {{ .vars.nginxIngressClassName }}
    hostname: minio-api.{{ .vars.domain }}
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
  persistence:
    enabled: true
    size: 10Gi
  statefulset:
    replicaCount: 4
    drivesPerNode: 1

########################################################
# Harbor
########################################################
harbor:
  enabled: false
  exposureType: ingress
  ingress:
    core:
      hostname: harbor.{{ .vars.domain }}
      ingressClassName: {{ .vars.nginxIngressClassName }}
  externalURL: https://harbor.{{ .vars.namespace }}.svc.cluster.local:{{ .vars.nginxIngressHttpsPort }}
  adminPassword: {{ .vars.adminPassword }}
  trivy:
    enabled: false
  service:
    type: ClusterIP
  jobservice:
    updateStrategy:
      type: Recreate
  persistence:
    imageChartStorage:
      type: s3
      s3:
        bucket: harbor
        rootdirectory: /
        accesskey: {{ .vars.adminUser }}
        secretkey: {{ .vars.adminPassword }}
        secure: false
        regionendpoint: http://minio-api.{{ .vars.namespace }}.svc.cluster.local:{{ .vars.nginxIngressHttpPort }}
  postgresql:
    enabled: false
  externalDatabase:
    host: {{ .vars.releaseName }}-postgresql.{{ .vars.namespace }}.svc.cluster.local
    port: 5432
    user: {{ .vars.adminUser }}
    password: {{ .vars.adminPassword }}
    sslmode: disable
    coreDatabase: harbor_core
  redis:
    enabled: false
  externalRedis:
    host: {{ .vars.releaseName }}-redis-master.{{ .vars.namespace }}.svc.cluster.local
    port: 6379

########################################################
# Gitea
########################################################
gitea:
  enabled: false
  ingress:
    enabled: true
    ingressClassName: {{ .vars.nginxIngressClassName }}
    hostname: gitea.{{ .vars.domain }}
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  service:
    type: ClusterIP
  resources:
    requests:
      memory: 128Mi
    limits:
      memory: 1024Mi
  appName: ops-gitea
  rootURL: https://gitea.{{ .vars.domain }}:{{ .vars.nginxIngressHttpsPort | default "443" }}
  extraEnvVars:
    - name: GITEA__SERVICE__SHOW_REGISTRATION_BUTTON
      value: "false"
  persistence:
    enabled: true
    size: 10Gi
  adminEmail: {{ .vars.adminEmail }}
  adminPassword: {{ .vars.adminPassword }}
  adminUsername: {{ .vars.adminUser }}
  postgresql:
    enabled: false
  externalDatabase:
    host: {{ .vars.releaseName }}-postgresql.{{ .vars.namespace }}.svc.cluster.local
    port: 5432
    user: {{ .vars.adminUser }}
    password: {{ .vars.adminPassword }}
    database: gitea

########################################################
# Argo CD
########################################################
argo-cd:
  enabled: true
  config:
    secret:
      argocdServerAdminPassword: {{ .vars.adminPassword }}
  server:
    insecure: true
    ingress:
      enabled: true
      ingressClassName: {{ .vars.nginxIngressClassName }}
      hostname: argocd.{{ .vars.domain }}
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 1024Mi
  repoServer:
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 1024Mi
  controller:
    resources:
      requests:
        memory: 128Mi
      limits:
        memory: 1024Mi
  redis:
    enabled: false
  externalRedis:
    host: {{ .vars.releaseName }}-redis-master.{{ .vars.namespace }}.svc.cluster.local
    port: 6379

########################################################
# Vault
########################################################
vault:
  enabled: true
  server:
    replicaCount: 1
    ingress:
      enabled: true
      ingressClassName: {{ .vars.nginxIngressClassName }}
      hostname: vault.{{ .vars.domain }}
