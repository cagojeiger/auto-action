{{- range $appName, $appConfig := .Values.apps }}
{{- $mergedConfig := include "tmpl-apps.mergeConfig" (dict "root" $ "app" $appConfig) | fromYaml }}
{{- $app := mergeOverwrite $appConfig $mergedConfig }}
{{- $app = set $app "name" $appName }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tmpl-apps.appFullname" (dict "root" $ "app" $app) }}
  labels:
    {{- include "tmpl-apps.labels" (dict "root" $ "app" $app) | nindent 4 }}
spec:
  {{- if not (and $app.autoscaling $app.autoscaling.enabled) }}
  replicas: {{ $app.replicas | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tmpl-apps.selectorLabels" (dict "root" $ "app" $app) | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/config/secret.yaml") $ | sha256sum }}
        {{- with $app.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tmpl-apps.selectorLabels" (dict "root" $ "app" $app) | nindent 8 }}
        {{- with $app.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and $app.serviceAccount $app.serviceAccount.create }}
      serviceAccountName: {{ include "tmpl-apps.serviceAccountName" (dict "root" $ "app" $app) }}
      {{- end }}
      {{- with $app.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $appName }}
          {{- with $app.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "tmpl-apps.image" (dict "root" $ "app" $app) }}
          imagePullPolicy: {{ if typeIs "string" $app.image }}IfNotPresent{{ else }}{{ $app.image.pullPolicy | default "IfNotPresent" }}{{ end }}
          {{- with $app.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $app.service.enabled }}
          ports:
            - name: http
              containerPort: {{ include "tmpl-apps.containerPort" (dict "app" $app) }}
              protocol: TCP
            {{- if and $app.metrics $app.metrics.enabled }}
            - name: metrics
              containerPort: {{ $app.metrics.port | default 9090 }}
              protocol: TCP
            {{- end }}
          {{- end }}
          env:
            {{- /* Auto-generate connection environment variables */}}
            {{- range $conn := $app.connections }}
            - name: {{ upper $conn }}_URL
              value: "http://{{ include "tmpl-apps.fullname" $ }}-{{ $conn }}:{{ index $.Values.apps $conn "service" "port" | default 80 }}"
            {{- end }}
            {{- /* Database connection helper */}}
            {{- if $app.database }}
            - name: DATABASE_URL
              value: "postgresql://{{ $app.database }}:5432/{{ $appName }}"
            {{- end }}
            {{- /* User-defined environment variables */}}
            {{- range $key, $value := $app.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- /* Secret environment variables */}}
            {{- if $app.secrets }}
            {{- range $key, $value := $app.secrets.env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "tmpl-apps.appFullname" (dict "root" $ "app" $app) }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          {{- if or $app.config $app.secrets }}
          envFrom:
            {{- if $app.config }}
            - configMapRef:
                name: {{ include "tmpl-apps.appFullname" (dict "root" $ "app" $app) }}
            {{- end }}
            {{- if and $app.secrets $app.secrets.envFrom }}
            - secretRef:
                name: {{ include "tmpl-apps.appFullname" (dict "root" $ "app" $app) }}
            {{- end }}
          {{- end }}
          {{- if and $app.probes (ne $app.probes.enabled false) }}
          {{- with $app.probes.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.probes.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.probes.startup }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with $app.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if and $app.config $app.config.mount }}
            - name: config
              mountPath: {{ $app.config.mount.path }}
              {{- if $app.config.mount.subPath }}
              subPath: {{ $app.config.mount.subPath }}
              {{- end }}
            {{- end }}
            {{- with $app.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if and $app.config $app.config.mount }}
        - name: config
          configMap:
            name: {{ include "tmpl-apps.appFullname" (dict "root" $ "app" $app) }}
        {{- end }}
        {{- with $app.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}