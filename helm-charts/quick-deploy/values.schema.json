{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["apps"],
  "properties": {
    "global": {
      "type": "object",
      "properties": {
        "imageRegistry": {
          "type": "string",
          "description": "Global Docker image registry"
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "Global image pull secrets",
          "items": {
            "type": "object"
          }
        },
        "defaultStorageClass": {
          "type": "string",
          "description": "Default storage class"
        },
        "storageClass": {
          "type": "string",
          "description": "Storage class to use"
        }
      }
    },
    "apps": {
      "type": "object",
      "description": "Application specifications",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Enable/disable this application deployment",
            "default": true
          },
          "image": {
            "type": "object",
            "properties": {
              "repository": {
                "type": "string",
                "description": "Image repository"
              },
              "tag": {
                "type": "string",
                "description": "Image tag"
              },
              "pullPolicy": {
                "type": "string",
                "description": "Image pull policy",
                "enum": ["Always", "Never", "IfNotPresent"]
              }
            },
            "required": ["repository", "tag"]
          },
          "replicaCount": {
            "type": "integer",
            "description": "Number of replicas"
          },
          "nameOverride": {
            "type": "string",
            "description": "Override the name"
          },
          "fullnameOverride": {
            "type": "string",
            "description": "Override the fullname"
          },
          "service": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable service creation"
              },
              "port": {
                "type": "integer",
                "description": "Service port"
              },
              "targetPort": {
                "type": ["string", "integer"],
                "description": "Container port (defaults to 'port' if not specified)"
              },
              "portName": {
                "type": "string",
                "description": "Port name"
              },
              "ports": {
                "type": "array",
                "description": "Multiple ports configuration",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "ingress": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable ingress"
              },
              "className": {
                "type": "string",
                "description": "Ingress class name"
              },
              "annotations": {
                "type": "object",
                "description": "Ingress annotations"
              },
              "hosts": {
                "type": "array",
                "description": "Ingress hosts",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "resources": {
            "type": "object",
            "description": "Resource requests and limits"
          },
          "autoscaling": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable autoscaling"
              },
              "minReplicas": {
                "type": "integer",
                "description": "Minimum replicas"
              },
              "maxReplicas": {
                "type": "integer",
                "description": "Maximum replicas"
              },
              "metrics": {
                "type": "array",
                "description": "HPA metrics",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "keda": {
            "type": "object",
            "description": "KEDA (Kubernetes Event-driven Autoscaling) configuration",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable KEDA autoscaling",
                "default": false
              },
              "minReplicaCount": {
                "type": "integer",
                "description": "Minimum number of replicas",
                "minimum": 0,
                "default": 1
              },
              "maxReplicaCount": {
                "type": "integer",
                "description": "Maximum number of replicas",
                "minimum": 1,
                "default": 10
              },
              "pollingInterval": {
                "type": "integer",
                "description": "Polling interval in seconds",
                "minimum": 1,
                "default": 30
              },
              "cooldownPeriod": {
                "type": "integer",
                "description": "Cooldown period in seconds",
                "minimum": 0,
                "default": 300
              },
              "advanced": {
                "type": "object",
                "description": "Advanced KEDA configuration",
                "additionalProperties": true
              },
              "triggers": {
                "type": "array",
                "description": "KEDA triggers configuration",
                "items": {
                  "type": "object",
                  "required": ["type"],
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Trigger type (e.g., redis, kafka, prometheus, cpu, memory, cron)"
                    },
                    "name": {
                      "type": "string",
                      "description": "Optional trigger name"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Trigger-specific metadata",
                      "additionalProperties": true
                    },
                    "authenticationRef": {
                      "type": "object",
                      "description": "Reference to TriggerAuthentication",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "metricType": {
                      "type": "string",
                      "description": "Metric type for the trigger",
                      "enum": ["Value", "AverageValue", "Utilization"]
                    }
                  }
                }
              }
            }
          },
          "serviceAccount": {
            "type": "object",
            "properties": {
              "create": {
                "type": "boolean",
                "description": "Create service account"
              },
              "automount": {
                "type": "boolean",
                "description": "Automount service account token"
              },
              "name": {
                "type": "string",
                "description": "Service account name"
              }
            }
          },
          "clusterRole": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable cluster role"
              },
              "rules": {
                "type": "array",
                "description": "Cluster role rules",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "persistence": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable persistence"
              },
              "name": {
                "type": "string",
                "description": "PVC name"
              },
              "size": {
                "type": "string",
                "description": "PVC size"
              },
              "storageClassName": {
                "type": "string",
                "description": "Storage class name"
              },
              "accessMode": {
                "type": "string",
                "description": "Access mode"
              }
            }
          },
          "configMap": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable ConfigMap"
              },
              "name": {
                "type": "string",
                "description": "ConfigMap name"
              },
              "data": {
                "type": "object",
                "description": "ConfigMap data"
              }
            }
          },
          "env": {
            "type": "array",
            "description": "Environment variables",
            "items": {
              "type": "object"
            }
          },
          "envFrom": {
            "type": "array",
            "description": "Environment from sources",
            "items": {
              "type": "object"
            }
          },
          "command": {
            "type": "array",
            "description": "Container command",
            "items": {
              "type": "string"
            }
          },
          "args": {
            "type": "array",
            "description": "Container arguments",
            "items": {
              "type": "string"
            }
          },
          "volumes": {
            "type": "array",
            "description": "Pod volumes",
            "items": {
              "type": "object"
            }
          },
          "volumeMounts": {
            "type": "array",
            "description": "Container volume mounts",
            "items": {
              "type": "object"
            }
          },
          "securityContext": {
            "type": "object",
            "description": "Security context (DEPRECATED - use podSecurityContext and containerSecurityContext instead)"
          },
          "podSecurityContext": {
            "type": "object",
            "description": "Pod-level security context"
          },
          "containerSecurityContext": {
            "type": "object",
            "description": "Container-level security context"
          },
          "initContainers": {
            "type": "array",
            "description": "Init containers",
            "items": {
              "type": "object"
            }
          },
          "lifecycle": {
            "type": "object",
            "description": "Container lifecycle hooks"
          },
          "livenessProbe": {
            "type": "object",
            "description": "Liveness probe"
          },
          "readinessProbe": {
            "type": "object",
            "description": "Readiness probe"
          },
          "podAnnotations": {
            "type": "object",
            "description": "Pod annotations"
          },
          "podLabels": {
            "type": "object",
            "description": "Pod labels"
          },
          "nodeSelector": {
            "type": "object",
            "description": "Node selector"
          },
          "affinity": {
            "type": "object",
            "description": "Pod affinity"
          },
          "tolerations": {
            "type": "array",
            "description": "Pod tolerations",
            "items": {
              "type": "object"
            }
          },
          "imagePullSecrets": {
            "type": "array",
            "description": "Image pull secrets",
            "items": {
              "type": "object"
            }
          },
          "istio": {
            "type": "object",
            "description": "Istio configuration for traffic management",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Enable Istio for this application",
                "default": false
              },
              "virtualService": {
                "type": "object",
                "description": "VirtualService configuration for HTTP routing",
                "properties": {
                  "gateways": {
                    "type": "array",
                    "description": "List of gateways to bind to",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hosts": {
                    "type": "array",
                    "description": "List of hosts for routing",
                    "items": {
                      "type": "string"
                    }
                  },
                  "http": {
                    "type": "array",
                    "description": "HTTP routing rules",
                    "items": {
                      "type": "object"
                    }
                  },
                  "rawSpec": {
                    "type": "object",
                    "description": "Raw VirtualService spec override"
                  }
                }
              },
              "destinationRule": {
                "type": "object",
                "description": "DestinationRule configuration for traffic policies",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable DestinationRule for this application",
                    "default": false
                  },
                  "subsets": {
                    "type": "array",
                    "description": "Service subsets based on labels",
                    "items": {
                      "type": "object"
                    }
                  },
                  "trafficPolicy": {
                    "type": "object",
                    "description": "Traffic policy configuration"
                  },
                  "rawSpec": {
                    "type": "object",
                    "description": "Raw DestinationRule spec override"
                  }
                }
              },
              "authorizationPolicy": {
                "type": "object",
                "description": "Istio AuthorizationPolicy configuration for access control",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable AuthorizationPolicy for this application",
                    "default": false
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace to create AuthorizationPolicy (defaults to Release.Namespace if not specified)"
                  },
                  "selector": {
                    "type": "object",
                    "description": "Workload selector to apply the policy"
                  },
                  "action": {
                    "type": "string",
                    "description": "Action to take when a request matches the policy",
                    "enum": ["ALLOW", "DENY", "CUSTOM"]
                  },
                  "provider": {
                    "type": "object",
                    "description": "External authorization provider configuration (required when action is CUSTOM)"
                  },
                  "rules": {
                    "type": "array",
                    "description": "List of authorization rules",
                    "items": {
                      "type": "object"
                    }
                  },
                  "rawSpec": {
                    "type": "object",
                    "description": "Raw AuthorizationPolicy spec override (overrides all above fields)"
                  }
                }
              }
            }
          }
        },
        "required": ["image"]
      }
    }
  }
}