{{- range $name, $app := .Values.apps }}
{{- if or (not (hasKey $app "enabled")) $app.enabled }}
{{- if and $app.istio $app.istio.enabled $app.istio.virtualService }}
{{- $vs := $app.istio.virtualService }}
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ printf "%s-vs" (include "quick-deploy.fullname" (dict "root" $ "name" $name "app" $app)) | trunc 63 | trimSuffix "-" }}
  labels:
    {{- include "quick-deploy.labels" (dict "root" $ "name" $name "app" $app) | nindent 4 }}
spec:
  {{- if $vs.rawSpec }}
  {{- toYaml $vs.rawSpec | nindent 2 }}
  {{- else }}
  {{- if not $vs.gateways }}
    {{- fail (printf "App '%s': istio.virtualService.gateways is required when using VirtualService" $name) }}
  {{- end }}
  {{- if $vs.gateways }}
  gateways:
    {{- toYaml $vs.gateways | nindent 4 }}
  {{- end }}
  {{- if $vs.hosts }}
  hosts:
    {{- toYaml $vs.hosts | nindent 4 }}
  {{- end }}
  {{- if $vs.http }}
  http:
    {{- range $vs.http }}
    {{- if .route }}
    - {{- toYaml . | nindent 6 }}
    {{- else }}
      {{- if not $app.service }}
        {{- fail (printf "App '%s': service is required when using VirtualService without explicit route" $name) }}
      {{- else if not $app.service.enabled }}
        {{- fail (printf "App '%s': service.enabled must be true when using VirtualService without explicit route" $name) }}
      {{- end }}
    - {{- range $key, $value := . }}
      {{ $key }}:
        {{- toYaml $value | nindent 8 }}
      {{- end }}
      route:
        - destination:
            host: {{ include "quick-deploy.fullname" (dict "root" $ "name" $name "app" $app) }}.{{ $.Release.Namespace }}.svc.cluster.local
            {{- if $app.service }}
            {{- if hasKey $app.service "port" }}
            port:
              number: {{ $app.service.port }}
            {{- else }}
            port:
              number: 80
            {{- end }}
            {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}