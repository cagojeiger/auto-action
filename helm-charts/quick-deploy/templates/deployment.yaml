{{- range $name, $app := .Values.apps }}
{{- if or (not (hasKey $app "enabled")) $app.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "quick-deploy.fullname" (dict "root" $ "name" $name "app" $app) }}
  labels:
    {{- include "quick-deploy.labels" (dict "root" $ "name" $name "app" $app) | nindent 4 }}
spec:
  {{- if not (and $app.autoscaling $app.autoscaling.enabled) }}
  replicas: {{ $app.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "quick-deploy.selectorLabels" (dict "root" $ "name" $name "app" $app) | nindent 6 }}
  template:
    metadata:
      {{- with $app.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "quick-deploy.labels" (dict "root" $ "name" $name "app" $app) | nindent 8 }}
        {{- with $app.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.global.imagePullSecrets | default $app.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and $app.serviceAccount $app.serviceAccount.create }}
      serviceAccountName: {{ include "quick-deploy.serviceAccountName" (dict "root" $ "name" $name "app" $app) }}
      {{- end }}
      {{- with $app.podSecurityContext | default $app.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $name }}
          {{- with $app.containerSecurityContext | default $app.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ $.Values.global.imageRegistry | default "" }}{{ with $.Values.global.imageRegistry }}{{ "/" }}{{ end }}{{ $app.image.repository }}:{{ $app.image.tag }}"
          imagePullPolicy: {{ $app.image.pullPolicy | default "IfNotPresent" }}
          {{- with $app.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if and $app.service $app.service.enabled }}
          ports:
            {{- if $app.service.ports }}
            {{- range $app.service.ports }}
            - name: {{ .name | default "http" }}
              containerPort: {{ .targetPort | default .port }}
              protocol: TCP
            {{- end }}
            {{- else }}
            - name: {{ $app.service.portName | default "http" }}
              containerPort: {{ $app.service.port | default 80 }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- with $app.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $app.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $app.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}