{{- range $name, $job := .Values.jobs }}
{{- if or (not (hasKey $job "enabled")) $job.enabled }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "quick-cronjob.jobFullname" (dict "root" $ "name" $name) }}
  labels:
    {{- include "quick-cronjob.labels" (dict "root" $ "name" $name) | nindent 4 }}
spec:
  schedule: {{ $job.schedule | quote }}
  {{- if $job.timeZone }}
  timeZone: {{ include "quick-cronjob.timeZone" (dict "root" $ "job" $job) }}
  {{- end }}
  {{- if hasKey $job "suspend" }}
  suspend: {{ $job.suspend }}
  {{- end }}
  {{- if $job.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ $job.startingDeadlineSeconds }}
  {{- end }}
  concurrencyPolicy: {{ $job.concurrencyPolicy | default "Forbid" }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit | default 3 }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit | default 1 }}
  jobTemplate:
    spec:
      {{- if $job.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ $job.activeDeadlineSeconds }}
      {{- end }}
      {{- if $job.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ $job.ttlSecondsAfterFinished }}
      {{- end }}
      {{- if $job.backoffLimit }}
      backoffLimit: {{ $job.backoffLimit }}
      {{- end }}
      {{- if $job.completions }}
      completions: {{ $job.completions }}
      {{- end }}
      {{- if $job.parallelism }}
      parallelism: {{ $job.parallelism }}
      {{- end }}
      template:
        metadata:
          labels:
            {{- include "quick-cronjob.labels" (dict "root" $ "name" $name) | nindent 12 }}
          {{- with $job.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          restartPolicy: {{ $job.restartPolicy | default "OnFailure" }}

          {{- if or (and $job.serviceAccount $job.serviceAccount.create) $.Values.global.imagePullSecrets $job.imagePullSecrets }}
          {{- if and $job.serviceAccount $job.serviceAccount.create }}
          serviceAccountName: {{ include "quick-cronjob.serviceAccountName" (dict "root" $ "name" $name "job" $job) }}
          {{- end }}
          {{- end }}

          {{- with (coalesce $job.imagePullSecrets $.Values.global.imagePullSecrets) }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- if $job.initContainers }}
          initContainers:
            {{- toYaml $job.initContainers | nindent 12 }}
          {{- end }}

          containers:
          - name: {{ $name }}
            image: {{ include "quick-cronjob.image" (dict "root" $ "job" $job) }}
            imagePullPolicy: {{ $job.image.pullPolicy | default "IfNotPresent" }}

            {{- with $job.command }}
            command:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- with $job.args }}
            args:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- if or $job.env $job.envFrom }}
            {{- with $job.env }}
            env:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- with $job.envFrom }}
            envFrom:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- end }}

            {{- with $job.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- if or $job.volumeMounts $job.configMap.create (and $job.persistence $job.persistence.enabled) }}
            volumeMounts:
            {{- if $job.configMap.create }}
            - name: config
              mountPath: /scripts
              readOnly: true
            {{- end }}
            {{- if and $job.persistence $job.persistence.enabled }}
            - name: data
              mountPath: {{ $job.persistence.mountPath | default "/data" }}
            {{- end }}
            {{- with $job.volumeMounts }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- end }}

            {{- with $job.securityContext }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- with $job.livenessProbe }}
            livenessProbe:
              {{- toYaml . | nindent 14 }}
            {{- end }}

            {{- with $job.readinessProbe }}
            readinessProbe:
              {{- toYaml . | nindent 14 }}
            {{- end }}

          {{- if $job.sidecars }}
          {{- with $job.sidecars }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- if or $job.volumes $job.configMap.create (and $job.persistence $job.persistence.enabled) }}
          volumes:
          {{- if $job.configMap.create }}
          - name: config
            configMap:
              name: {{ include "quick-cronjob.configMapName" (dict "root" $ "name" $name "job" $job) }}
              defaultMode: 0755
          {{- end }}
          {{- if and $job.persistence $job.persistence.enabled }}
          - name: data
            persistentVolumeClaim:
              claimName: {{ include "quick-cronjob.pvcName" (dict "root" $ "name" $name "job" $job) }}
          {{- end }}
          {{- with $job.volumes }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- with $job.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $job.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $job.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $job.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}