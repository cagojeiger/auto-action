suite: 스토리지 통합 테스트
tests:
  - it: Deployment와 PVC가 올바르게 연결되어야 함
    release:
      name: test-release
    set:
      templateDefaults:
        database:
          persistence:
            enabled: true
            size: 1Gi
            accessMode: ReadWriteOnce
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: test-release-postgres-data
      templates:
        - name: postgres
          type: database
          image:
            repository: postgres
            tag: "14"
    asserts:
      - template: deployment.yaml
        isKind:
          of: Deployment
      - template: pvc.yaml
        isKind:
          of: PersistentVolumeClaim
      - template: deployment.yaml
        contains:
          path: spec.template.spec.volumes
          content:
            name: data
            persistentVolumeClaim:
              claimName: test-release-postgres-data
      - template: deployment.yaml
        contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /var/lib/postgresql/data
            name: data

  - it: 사용자 지정 PVC 이름이 Deployment에 올바르게 적용되어야 함
    release:
      name: test-release
    set:
      templateDefaults:
        database:
          persistence:
            enabled: true
            name: "my-custom-pvc"
            size: 5Gi
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: my-custom-pvc
      templates:
        - name: mysql
          type: database
          image:
            repository: mysql
            tag: "8.0"
    asserts:
      - template: deployment.yaml
        isKind:
          of: Deployment
      - template: pvc.yaml
        isKind:
          of: PersistentVolumeClaim
      - template: pvc.yaml
        equal:
          path: metadata.name
          value: my-custom-pvc
      - template: deployment.yaml
        contains:
          path: spec.template.spec.volumes
          content:
            name: data
            persistentVolumeClaim:
              claimName: my-custom-pvc
      - template: pvc.yaml
        equal:
          path: spec.resources.requests.storage
          value: 5Gi 