{{- range $index, $template := .Values.templates }}
{{- $type := $template.type | default "" }}
{{- $mergedValues := include "template-deployment.mergeValues" (dict "root" $ "values" $template "type" $type) | fromYaml }}
{{- $values := $mergedValues }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "template-deployment.fullname" (dict "root" $ "values" $values) }}
  labels:
    {{- include "template-deployment.labels" (dict "root" $ "values" $values) | nindent 4 }}
spec:
  {{- if not (and $values.autoscaling $values.autoscaling.enabled) }}
  replicas: {{ $values.replicaCount | default 1 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "template-deployment.selectorLabels" (dict "root" $ "values" $values) | nindent 6 }}
  template:
    metadata:
      {{- with $values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "template-deployment.labels" (dict "root" $ "values" $values) | nindent 8 }}
        {{- with $values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.global.imagePullSecrets | default $values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and $values.serviceAccount $values.serviceAccount.create }}
      serviceAccountName: {{ include "template-deployment.serviceAccountName" (dict "root" $ "values" $values) }}
      {{- end }}
      {{- with $values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $values.name }}
          {{- with $values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ $.Values.global.imageRegistry | default "" }}{{ with $.Values.global.imageRegistry }}{{ "/" }}{{ end }}{{ $values.image.repository }}:{{ $values.image.tag }}"
          imagePullPolicy: {{ $values.image.pullPolicy | default "IfNotPresent" }}
          {{- with $values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- with $values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $values.configMaps }}
          {{- range $cm := $values.configMaps }}
          {{- if $cm.envFrom }}
            - configMapRef:
                name: {{ include "template-deployment.fullname" (dict "root" $ "values" $values) }}-{{ $cm.name | default "config" }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $values.secrets }}
          {{- range $secret := $values.secrets }}
          {{- if $secret.envFrom }}
            - secretRef:
                name: {{ include "template-deployment.fullname" (dict "root" $ "values" $values) }}-{{ $secret.name | default "secret" }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with $values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if and $values.service $values.service.enabled }}
          ports:
            {{- if $values.service.ports }}
            {{- range $values.service.ports }}
            - name: {{ .name | default "http" }}
              containerPort: {{ .targetPort | default .port }}
              protocol: TCP
            {{- end }}
            {{- else }}
            - name: {{ $values.service.portName | default "http" }}
              containerPort: {{ $values.service.targetPort | default $values.service.port | default 80 }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if $values.livenessProbe }}
          livenessProbe:
            {{- toYaml $values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $values.readinessProbe }}
          readinessProbe:
            {{- toYaml $values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- with $values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with $values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $values.configMaps }}
          {{- range $cmIndex, $cm := $values.configMaps }}
          {{- if $cm.volumeMount }}
            - name: configmap-{{ $cm.name | default (printf "config-%d" $cmIndex) }}
              mountPath: {{ $cm.volumeMount.mountPath }}
              {{- if $cm.volumeMount.subPath }}
              subPath: {{ $cm.volumeMount.subPath }}
              {{- end }}
              {{- if $cm.volumeMount.readOnly }}
              readOnly: {{ $cm.volumeMount.readOnly }}
              {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $values.secrets }}
          {{- range $secretIndex, $secret := $values.secrets }}
          {{- if $secret.volumeMount }}
            - name: secret-{{ $secret.name | default (printf "secret-%d" $secretIndex) }}
              mountPath: {{ $secret.volumeMount.mountPath }}
              {{- if $secret.volumeMount.subPath }}
              subPath: {{ $secret.volumeMount.subPath }}
              {{- end }}
              {{- if $secret.volumeMount.readOnly }}
              readOnly: {{ $secret.volumeMount.readOnly }}
              {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
      volumes:
      {{- with $values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $values.configMaps }}
      {{- range $cmIndex, $cm := $values.configMaps }}
      {{- if $cm.volumeMount }}
        - name: configmap-{{ $cm.name | default (printf "config-%d" $cmIndex) }}
          configMap:
            name: {{ include "template-deployment.fullname" (dict "root" $ "values" $values) }}-{{ $cm.name | default (printf "config-%d" $cmIndex) }}
            {{- if $cm.volumeMount.items }}
            items:
              {{- toYaml $cm.volumeMount.items | nindent 14 }}
            {{- end }}
            {{- if $cm.volumeMount.defaultMode }}
            defaultMode: {{ $cm.volumeMount.defaultMode }}
            {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if $values.secrets }}
      {{- range $secretIndex, $secret := $values.secrets }}
      {{- if $secret.volumeMount }}
        - name: secret-{{ $secret.name | default (printf "secret-%d" $secretIndex) }}
          secret:
            secretName: {{ include "template-deployment.fullname" (dict "root" $ "values" $values) }}-{{ $secret.name | default (printf "secret-%d" $secretIndex) }}
            {{- if $secret.volumeMount.items }}
            items:
              {{- toYaml $secret.volumeMount.items | nindent 14 }}
            {{- end }}
            {{- if $secret.volumeMount.defaultMode }}
            defaultMode: {{ $secret.volumeMount.defaultMode }}
            {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- with $values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}